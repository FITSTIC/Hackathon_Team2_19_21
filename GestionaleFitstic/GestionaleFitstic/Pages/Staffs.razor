@page "/staffs"

@using GestionaleFitstic.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db
@inject IJSRuntime JSRuntime
<!--TABLE-->
<h1>Personale della fondazione</h1>
<a href="/staffdetail" class="btn btn-primary">Nuovo membro</a>

@if (staffs == null)
{
}
else
{
<table id="staffs" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>Cognome</th>
            <th>Nome</th>
            <th>Data di nascita</th>
            <th>Email</th>
            <th>Cellulare</th>
            <th>Mansione</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var staff in staffs)
         {
            <tr>
                <td>@(staff.Surname.Substring(0,1).ToUpper() + staff.Surname.Substring(1).ToLower())</td>
                <td>@(staff.Name.Substring(0,1).ToUpper() + staff.Surname.Substring(1).ToLower())</td>
                <td>@staff.BirthDate.Date.ToString("dd/MM/yyyy")</td>
                <td>@staff.Email.ToLower()</td>
                <td>@staff.PhoneNumber</td>
                <td>@staff.Jobs</td>
                <td><button class="btn btn-danger" @onclick="@(() => DeleteStaff(staff))">Elimina</button></td>
                <td><a class="btn btn-warning" href="/staffdetail/@staff.Id">Dettagli</a></td>
            </tr>
         }
    </tbody>
</table>

}

@code {
    private Staff[] staffs;
    string message = "Stai eliminando un personale, sei sicuro?";

    protected override async Task OnInitializedAsync()
    {
        staffs = await db.Staffs
            .OrderBy(x => x.Surname)
            .ToArrayAsync();
    }

    private async Task DeleteStaff(Staff s)
    {
        bool resultY = await ConfirmDelete();
        if (resultY)
        {
            db.Staffs.Remove(s);
            db.SaveChanges();
            staffs = db.Staffs
                .OrderBy(x=>x.Surname)
                .ToArray();
            StateHasChanged();
        }
    }

    private async Task<bool> ConfirmDelete()
    {
        bool result = await JSRuntime.InvokeAsync<bool>("confirm", new[] { message });
        return result;
    }
}